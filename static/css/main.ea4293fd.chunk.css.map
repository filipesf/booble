{"version":3,"sources":["/Users/filipesf/Code/booble/source/assets/styles/base/_typography.scss","/Users/filipesf/Code/booble/source/assets/styles/utils/_animations.scss","/Users/filipesf/Code/booble/source/assets/styles/utils/_units.scss","/Users/filipesf/Code/booble/source/assets/styles/base/_elements.scss","/Users/filipesf/Code/booble/source/assets/styles/utils/_responsive.scss","/Users/filipesf/Code/booble/source/assets/styles/utils/_typography.scss","/Users/filipesf/Code/booble/source/assets/styles/utils/_colors.scss","/Users/filipesf/Code/booble/source/assets/styles/layouts/_cards-list.scss","/Users/filipesf/Code/booble/source/assets/styles/utils/_patterns.scss","/Users/filipesf/Code/booble/source/assets/styles/components/_logo.scss","/Users/filipesf/Code/booble/source/assets/styles/components/_search.scss","/Users/filipesf/Code/booble/source/assets/styles/utils/_decoration.scss","/Users/filipesf/Code/booble/source/assets/styles/utils/_transitions.scss","/Users/filipesf/Code/booble/source/assets/styles/utils/_helpers.scss","/Users/filipesf/Code/booble/source/assets/styles/components/_card.scss","/Users/filipesf/Code/booble/source/assets/styles/components/_modal.scss"],"names":[],"mappings":"AAuFA,gBAyBe,CC3Gf,0BACE,GACE,kCAA8B,CAA9B,0BAA8B,CAC9B,SAAU,CAGZ,GACE,+BAAwB,CAAxB,uBAAwB,CACxB,SAAU,CAAA,CARd,kBACE,GACE,kCAA8B,CAA9B,0BAA8B,CAC9B,SAAU,CAGZ,GACE,+BAAwB,CAAxB,uBAAwB,CACxB,SAAU,CAAA,CAKd,yBACE,GACE,eCyCmC,CDxCnC,SAAU,CAGZ,GACE,YAAa,CACb,SAAU,CAAA,CARd,iBACE,GACE,eCyCmC,CDxCnC,SAAU,CAGZ,GACE,YAAa,CACb,SAAU,CAAA,CEXd,iBACE,qBAAsB,CACtB,SAAU,CACV,QAAS,CACT,YAAa,CACb,gBAAiC,CAmBnC,KACE,aAAc,CACd,eAAgB,CAChB,kCAAmC,CACnC,iCAAkC,CAClC,6BAAsB,CAAtB,yBAAsB,CAAtB,qBAAsB,CACtB,iBAAkB,CAClB,eAA8C,CAQhD,qGAKE,oBDEqC,CCGvC,MACE,kBDJqC,CE0BrC,mCDvBF,MAII,gBDPmC,CCStC,CAQD,MAEI,gBDnBmC,CCiBvC,YASI,eAAgB,CAChB,kBAA+B,CASnC,uBAEE,WAAY,CAYd,IACE,cAAe,CACf,iBAAkB,CAClB,qBAAiC,CH9GnC,KK2DE,kBHrBmC,CGsBnC,mBArBuD,CLrCvD,+IKgBwL,CLfxL,eAAgB,CAChB,aMOc,CNFhB,kBAEE,eAAgB,CAChB,aMCc,CNIhB,GK0CE,kBHrBmC,CGsBnC,mBArBuD,CLrBzD,GKyCE,kBHrBmC,CGsBnC,mBArBuD,CLpBzD,GKwCE,kBHrBmC,CGsBnC,mBArBuD,CLnBzD,GKuCE,kBHrBmC,CGsBnC,mBArBuD,CLlBzD,GKsCE,kBHrBmC,CGsBnC,mBArBuD,CLjBzD,GKqCE,kBHrBmC,CGsBnC,mBArBuD,CD4CvD,wCJ1DA,GKkCA,kBHrBmC,CGsBnC,mBArBuD,CLbvD,GKiCA,kBHrBmC,CGsBnC,mBArBuD,CLZvD,GKgCA,kBHrBmC,CGsBnC,mBArBuD,CLXvD,GK+BA,kBHrBmC,CGsBnC,mBArBuD,CLVvD,GK8BA,kBHrBmC,CGsBnC,mBArBuD,CLTvD,GK6BA,kBHrBmC,CGsBnC,mBArBuD,CLTxB,CAKjC,EACE,wBEqBqC,CFtBvC,OAII,eAAgB,CAMpB,MKcE,iBHrBmC,CGsBnC,mBArBuD,CLYzD,EACE,eAAgB,CAChB,yBAA0B,CAC1B,aMlCe,CN2CjB,+BAEI,oBAAqB,CAMzB,KACE,gHKlDgJ,CLmDhJ,iBAAkB,CAClB,eAAgB,CIShB,mCJZF,KAMI,eAAgB,CAEnB,CAID,WKxBE,kBHrBmC,CGsBnC,eArBuD,CL8CvD,iBAAkB,CAClB,eAAgB,CAChB,iBE9BqC,CFkCrC,wBElCqC,CE0BrC,mCJAF,WAWI,kBErCmC,CFsCnC,iBEtCmC,CFuCnC,oBEvCmC,CFwCnC,aExCmC,CFiEtC,CAvCD,kBKxBE,kBHrBmC,CGsBnC,eArBuD,CLiErD,WAAS,CACT,iBAAkB,CAClB,SEjDmC,CFkDnC,MAAO,CACP,UAAW,CAzBf,aA+BI,iBAAkB,CAClB,eAAgB,CAChB,aM1GY,CNyEhB,0BAoCM,eAAgB,COvHtB,cCME,UAAW,CACX,eNkDqC,CM/CnC,aAAc,CDRhB,YAAa,CACb,aLsDqC,CKrDrC,0CAA4C,CAC5C,sBAAuB,CACvB,mBLmDqC,CE0BrC,mCGnFF,cASI,+CAAiD,CACjD,cAAkB,CAErB,CEZD,QPsGE,WA7CqC,CA8CrC,UOtGuB,CCDzB,UACE,YAAa,CACb,aRuDqC,CQtDrC,mBRsDqC,CE0BrC,mCMnFF,UAMI,YRmDmC,CQjDtC,CAID,iBCkCE,sCLvCc,CK8Cd,6BL9Cc,CMOd,+BAXuB,CAWvB,uBAXuB,CJGvB,UAAW,CACX,eNkDqC,CM/CnC,aAAc,CHiDhB,kBHrBmC,CGsBnC,eArBuD,CKtBvD,aAAc,CACd,aRuCqC,CQtCrC,mBRsCqC,CQrCrC,iBAAkB,CAClB,aJVc,CIWd,uBAAwB,CACxB,oBAAgB,CAAhB,eAAgB,CGVd,sEFiCF,sCLtCc,CK6Cd,6BL7Cc,COgBd,4CHME,UACF,CGHA,mCHEE,UACF,CGCA,uCHFE,UACF,CGKA,kCHNE,UACF,CNoDA,mCMvEF,iBL+CE,kBHrBmC,CGsBnC,mBArBuD,CKHxD,CIpCD,QH+BE,oFLpBc,C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","file":"main.ea4293fd.chunk.css","sourcesContent":["/* ==========================================================================\n   TYPOGRAPHY\n   ========================================================================== */\n\nbody {\n  @include type-scale(1, -1);\n  font-family: $font-family-secondary;\n  font-weight: 400;\n  color: color(gray, 700);\n}\n\n\n\nh1, h2, h3,\nh4, h5, h6 {\n  font-weight: 700;\n  color: color(gray, 900);\n}\n\n\n\nh1 { @include type-scale(7); }\nh2 { @include type-scale(6); }\nh3 { @include type-scale(5); }\nh4 { @include type-scale(4); }\nh5 { @include type-scale(3); }\nh6 { @include type-scale(2); }\n\n@include media-query(813) {\n  h1 { @include type-scale(9); }\n  h2 { @include type-scale(8); }\n  h3 { @include type-scale(7); }\n  h4 { @include type-scale(6); }\n  h5 { @include type-scale(5); }\n  h6 { @include type-scale(4); }\n}\n\n\n\np {\n  letter-spacing: rem(0.1);\n\n  code {\n    font-weight: 500;\n  }\n}\n\n\n\nsmall {\n  @include type-scale(-1);\n}\n\n\n\na {\n  font-weight: 700;\n  text-decoration: underline;\n  color: color(util, info);\n\n  @include on-event {\n    text-decoration: none;\n  }\n}\n\n\n\nsup {\n  a {\n    text-decoration: none;\n  }\n}\n\n\n\ncode {\n  font-family: $font-family-monospaced;\n  font-style: normal;\n  font-weight: 600;\n\n  @include media-query(medium) {\n    font-weight: 400;\n  }\n}\n\n\n\nblockquote {\n  @include type-scale(2, 0);\n  position: relative;\n  padding-right: 0;\n  padding-left: size(6);\n  margin-top: size(4);\n  margin-right: 0;\n  margin-bottom: size(4);\n  margin-left: size(-2);\n\n  @include media-query(medium) {\n    padding-right: size(6);\n    margin-top: size(3);\n    margin-bottom: size(3);\n    margin-left: size(0);\n  }\n\n\n\n  &:before {\n    @include type-scale(14, 0);\n    content: 'â€œ';\n    position: absolute;\n    top: size(-4);\n    left: 0;\n    z-index: -1;\n  }\n\n\n\n  p {\n    font-style: italic;\n    font-weight: 300;\n    color: color(gray, 600);\n\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n}\n","/* ==========================================================================\n   ANIMATIONS\n   ========================================================================== */\n\n/// @group Animations\n@keyframes fadein {\n  from {\n    transform: translateY(rem(32));\n    opacity: 0;\n  }\n\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n/// @group Animations\n@keyframes modal {\n  from {\n    margin-top: size(6);\n    opacity: 0;\n  }\n\n  to {\n    margin-top: 0;\n    opacity: 1;\n  }\n}\n\n/// @group Animations\n/// @type map\n$animations: (\n  intro: (\n    opacity: 0,\n    animation-name: fadein,\n    animation-duration: 1s,\n    animation-fill-mode: forwards,\n  ),\n\n  modal: (\n    opacity: 0,\n    animation-name: modal,\n    animation-duration: 1s,\n    animation-fill-mode: forwards,\n  ),\n);\n\n/// @group Animations\n/// @type map\n$animation-order: (\n  1: 0ms,\n  2: 50ms,\n  3: 150ms,\n  4: 250ms,\n  5: 350ms,\n  6: 450ms,\n  7: 550ms,\n  8: 650ms,\n  9: 750ms,\n);\n\n/// @group Animations\n/// @param {string} $name\n/// @param {number|bool} $delay [false]\n@mixin animation($name, $delay: false) {\n  @each $property, $value in map-get($animations, $name) {\n    #{$property}: #{$value};\n  }\n  @if $delay {\n    animation-delay: map-get($animation-order, $delay)\n  }\n}\n","/* ==========================================================================\n   UNITS\n   ========================================================================== */\n\n/// @group Units\n/// @type {number}\n$base-unit: 8px;\n\n/// @group Units\n/// @param {number} $num - Number to remove unit from\n/// @return {number} - Unitless number\n@function stript-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n/// @group Units\n/// @param {number} $number\n/// @param {number} $exponent\n/// @return {number} - Exponential $number\n@function pow($number, $exponent) {\n  $value: 1;\n\n  @if $exponent > 0 {\n    @for $i from 1 through $exponent {\n      $value: $value * $number;\n    }\n  } @else if $exponent < 0 {\n    @for $i from 1 through -$exponent {\n      $value: $value / $number;\n    }\n  }\n\n  @return $value;\n}\n\n/// @group Units\n/// @require {function} pow\n/// @param {number} $float - Number to format\n/// @param {number} $digits [5] - Number of digits to leave\n/// @return {number}\n@function precision($float, $digits: 5) {\n  $pow: pow(10, $digits);\n  @return round($float * $pow) / $pow;\n}\n\n/// @group Units\n/// @require {variable} $font-unit\n/// @require {variable} $font-unit-ratio\n/// @require {function} precision\n/// @require {function} pow\n/// @param {number} $scale\n/// @return {number} - Modular scale\n@function modular-scale($scale, $base, $ratio) {\n  $modular-scale: $base * pow($ratio, $scale);\n  @return precision($modular-scale, 3);\n}\n\n/// @group Units\n/// @param {number} $num - Number to be converted\n/// @return {number} - Rem number\n@function rem($num) {\n  @return stript-unit($num) / 16 * 1rem;\n}\n\n/// Should only be used for media queries.\n/// @group Units\n/// @param {number} $num - Number to be converted\n/// @return {number} - Em number\n@function em($num) {\n  @return stript-unit($num) / 16 * 1em;\n}\n\n/// @group Units\n/// @require {variable} $base-unit\n/// @param {number} $scale\n/// @return {number} - Scaled base unit\n@function size($scale: 1) {\n  @return rem($base-unit * $scale);\n}\n\n/// @group Units\n/// @param {number} $width\n/// @param {number} $height [$width] - $width as default for square shapes\n/// @example scss\n///   // _foo.scss\n///   .foo {\n///     @include rectangle(48px);\n///   }\n///\n///   // foo.css\n///   .foo {\n///     width: 48px;\n///     height: 48px;\n///   }\n///\n///   // _bar.scss\n///   .bar {\n///     @include rectangle(48px, 24px);\n///   }\n///\n///   // bar.css\n///   .bar {\n///     width: 48px;\n///     height: 24px;\n///   }\n@mixin rectangle($width, $height: $width) {\n  height: $height;\n  width: $width;\n}\n","/* ==========================================================================\n   ELEMENTS\n   ========================================================================== */\n\n/**\n * 1. Set the global `box-sizing` state to `border-box`.\n * 2. As well as using normalize.css, it is often advantageous to remove all\n *    margins from certain elements.\n * 3. Removed outline globaly; Using @mixin on-event(); to handle focus state.\n * 4. Optimise animations by informing the browser which elements will change\n *    and what properties will change.\n *\n * @link http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice\n * @link http://paulirish.com/2012/box-sizing-border-box-ftw\n */\n*, *::before, *::after {\n  box-sizing: border-box; /* [1] */\n  padding: 0;             /* [2] */\n  margin: 0;              /* [2] */\n  outline: none;          /* [3] */\n  will-change: auto;      /* [4] */\n}\n\n\n\n/**\n * High-, page-level styling.\n *\n * 1. Set the default `font-size` and `line-height` for the entire project,\n *    sourced from our default variables. The `font-size` is calculated to exist\n *    in ems, the `line-height` is calculated to exist unitlessly.\n * 2. Fonts on OSX will look more consistent with other systems that do not\n *    render text using sub-pixel anti-aliasing.\n * 3. Prevent certain mobile browsers from automatically zooming fonts.\n * 4. Force scrollbars to always be visible to prevent awkward â€˜jumpsâ€™ when\n *    navigating between pages that do/do not have enough content to produce\n *    scrollbars naturally.\n * 5. Ensure the page always fills at least the entire height of the viewport.\n */\nhtml {\n  font-size: 1em;                      /* [1] */\n  line-height: 1.5;                    /* [1] */\n  -webkit-font-smoothing: antialiased; /* [2] */\n  -moz-osx-font-smoothing: grayscale;  /* [2] */\n  text-size-adjust: 100%;              /* [3] */\n  overflow-y: scroll;                  /* [4] */\n  min-height: 100%;                    /* [5] */\n}\n\n\n\n/**\n * Define vertical rhythm for all block level elements.\n */\nh1, h2, h3, h4, h5, h6, hgroup,\np, address, blockquote, figure,\nform, noscript, fieldset,\nul, ol, dd, dl,\npre, table, hr {\n  margin-bottom: size(3);\n}\n\n\n\nul, ol {\n  margin-left: size(3);\n\n  @include media-query(medium) {\n    margin-left: size(6);\n  }\n}\n\n\n\n/**\n * 1. Remove extra vertical spacing when nesting lists;\n * 2. Adjust nesting list depth.\n */\nli {\n  + li {\n    margin-top: size(1);\n  }\n\n\n\n  > ul,\n  > ol {\n    margin-bottom: 0;     /* [1] */\n    margin-left: size(3); /* [2] */\n  }\n}\n\n\n\n/**\n * Give a help cursor to elements that give extra info on `:hover`.\n */\nabbr[title],\ndfn[title] {\n  cursor: help;\n}\n\n\n\n/**\n * 1. Fluid images for responsive purposes.\n * 2. Offset `alt` text from surrounding copy.\n * 3. Setting `vertical-align` removes the whitespace that appears under `img`\n *    elements when they are dropped into a page as-is. Safer alternative to\n *    using `display: block;`.\n */\nimg {\n  max-width: 100%;        /* [1] */\n  font-style: italic;     /* [2] */\n  vertical-align: middle; /* [3] */\n}\n","/* ==========================================================================\n   RESPONSIVE\n   ========================================================================== */\n\n/// @group Responsive\n/// @type {map}\n$responsive-units: (\n  small: 320px,\n  medium: 768px,\n  large: 1024px,\n  wide: 1440px\n);\n\n/// @group responsive\n/// @author Jonathan Suh\n/// @require {variable} $responsive-units\n/// @require {function} em\n/// @param {string} $mq-breakpoint - Screen resolution name\n/// @param {map} $mq-breakpoints [$responsive-units] - Breakpoints list\n/// @example scss - Simple usage\n///   // _foo.scss\n///   .foo {\n///     background-color: blue;\n///\n///     @include media-query(small) {\n///       background-color: red;\n///     }\n///   }\n///\n///   // foo.css\n///   .foo {\n///     background-color: blue;\n///   }\n///\n///   @media screen and (min-width: 20em) {\n///     .foo {\n///       background-color: red;\n///     }\n///   }\n///\n/// @example scss - Nesting\n///   // _bar.scss\n///   .bar {\n///     background-color: blue;\n///\n///     @include media-query(small) {\n///       background-color: red;\n///\n///       @include media-query(landscape) {\n///         background-color: yellow;\n///       }\n///     }\n///   }\n///\n///   // bar.css\n///   .bar {\n///     background-color: blue;\n///   }\n///\n///   @media screen and (min-width: 20em) {\n///     .bar {\n///       background-color: red;\n///     }\n///   }\n///\n///   @media screen and (min-width: 20em) and (orientation:landscape) {\n///     .bar {\n///       background-color: yellow;\n///     }\n///   }\n@mixin media-query($mq-breakpoint, $mq-breakpoints: $responsive-units) {\n  $mq-media-query: \"screen and\";\n\n  @if $mq-breakpoint == landscape or $mq-breakpoint == portrait {\n    $mq-media-query: \"#{$mq-media-query} (orientation: #{$mq-breakpoint})\";\n  } @else if $mq-breakpoint == retina {\n    $mq-media-query: \"#{$mq-media-query} (-webkit-min-device-pixel-ratio: 2),\"+\n                     \"#{$mq-media-query} (min-resolution: 2dppx)\";\n  } @else {\n    // If $mq-breakpoint is a key that exists in\n    // $mq-breakpoints, get and use the value\n    @if map-has-key($mq-breakpoints, $mq-breakpoint) {\n      $mq-breakpoint: map-get($mq-breakpoints, $mq-breakpoint);\n    }\n    $mq-media-query: \"#{$mq-media-query} (min-width: #{em($mq-breakpoint)})\";\n  }\n\n  @media #{$mq-media-query} {\n    @content;\n  }\n}\n","/* ==========================================================================\n   TYPOGRAPHY\n   ========================================================================== */\n\n/// @group Typography\n/// @type number\n$font-unit: 1rem;\n\n/// @group Typography\n/// @type number\n$font-unit-ratio: 1.125;\n\n/// @group Typography\n/// @type number\n$line-unit: 1.5;\n\n/// @group Typography\n/// @type string\n$font-family-primary: 'Museo Sans';\n\n/// @group Typography\n/// @type list\n$font-family-secondary: 'system-ui', '-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n\n/// @group Typography\n/// @type list\n$font-family-monospaced: 'Operator Mono', 'Inconsolata', 'Monaco', 'Consolas', 'Andale Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace;\n\n/// @group Typography\n/// @require {variable} $font-unit\n/// @require {variable} $font-unit-ratio\n/// @param {number} $scale\n/// @return {number} - Rem Number\n@function font-scale($scale: 0) {\n  @return modular-scale($scale, $font-unit, $font-unit-ratio);\n}\n\n/// @group Typography\n/// @require {variable} $line-unit\n/// @param {number} $scale\n/// @return {number} - Unitless number\n@function line-scale($scale) {\n  $size: font-scale($scale);\n  @return ceil($size / $line-unit) * ($line-unit / $size);\n}\n\n/// @group Typography\n/// @require {function} font-scale\n/// @require {function} line-scale\n/// @param {number} $scale\n/// @output Place `font-size` and `line-height`\n/// @example scss\n///   // _headline.scss\n///   h1 {\n///     @include type-scale(3);\n///   }\n///\n///   // headline.css\n///   h1 {\n///     font-size: 2.37037rem;\n///     line-height: 1.26562\n///   }\n@mixin type-scale($font, $line: $font) {\n  font-size: font-scale($font);\n  line-height: line-scale($line);\n}\n\n/// @group Typography\n/// @param {number} $lines\n/// @param {number} $text-wrap-width [100%]\n/// @output Truncate text in the container and add a ellipsis at the end\n@mixin text-wrap($lines, $text-wrap-width: 100%) {\n  overflow: hidden;\n\n  @if $lines > 1 {\n    display: -webkit-box;\n    -webkit-line-clamp: $lines;\n    -webkit-box-orient: vertical;\n    text-overflow: -o-ellipsis-lastline;\n  } @else {\n    max-width: $text-wrap-width;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n}\n","/* ==========================================================================\n   COLORS\n   ========================================================================== */\n\n/// @group Colors\n/// @type map\n$colors: (\n  gray: (\n    000: #f8f9fa,\n    100: #f1f3f5,\n    200: #e9ecef,\n    300: #dee2e6,\n    400: #ced4da,\n    500: #adb5bd,\n    600: #868e96,\n    700: #495057,\n    800: #343a40,\n    900: #21252a,\n  ),\n\n  util: (\n    success: #40c057,\n    warning: #f59f00,\n    danger: #f03e3e,\n    info: #1c7ed6,\n  )\n);\n\n/// @group Colors\n/// @require {variable} $colors\n/// @param {string} $name\n/// @param {number} $shade [500]\n/// @return {color}\n/// @example scss\n/// // hero.scss\n/// .c-hero {\n///  background-color: color(berry, 700);\n/// }\n///\n/// // hero.css\n/// .c-hero {\n///  background-color: #cc163e;\n/// }\n@function color($name, $shade: 500) {\n  @return map-get(map-get($colors, $name), $shade);\n}\n","/* ==========================================================================\n   CARDS LIST\n   ========================================================================== */\n\n.l-cards-list {\n  @include wrapper;\n  display: grid;\n  grid-gap: size(6);\n  grid-template-columns: repeat(auto-fit, 1fr);\n  justify-content: center;\n  padding: size(6) size(3);\n\n  @include media-query(medium) {\n    grid-template-columns: repeat(auto-fit, rem(300));\n    padding: size(6) 0;\n  }\n}\n","/* ==========================================================================\n   UI PATTERNS\n   ========================================================================== */\n\n/// @group Patterns\n/// @require {function} rem\n/// @param $width [rem(1280)]\n/// @param $margin [true]\n/// @output Set `max-width` to the container\n@mixin wrapper($width: rem(1280), $margin: true) {\n  width: 100%;\n  max-width: $width;\n\n  @if $margin {\n    margin: 0 auto;\n  }\n}\n","/* ==========================================================================\n   LOGO\n   ========================================================================== */\n\n.c-logo {\n  @include rectangle(100%, size(8));\n}\n","/* ==========================================================================\n   SEARCH\n   ========================================================================== */\n\n.c-search {\n  display: grid;\n  grid-gap: size(8);\n  padding: size(6) size(3);\n\n  @include media-query(medium) {\n    padding: size(8);\n  }\n}\n\n\n\n.c-search__input {\n  @include floatbox;\n  @include transition(default);\n  @include wrapper(rem(1024));\n  @include type-scale(2, 0);\n  display: block;\n  padding: size(1);\n  border-radius: rem(8);\n  text-align: center;\n  color: color(gray, 700);\n  -webkit-appearance: none;\n  appearance: none;\n\n  @include on-event {\n    @include floatbox(flat, rem(3), color(gray, 400));\n  }\n\n  @include placeholder {\n    opacity: .5\n  }\n\n  @include media-query(medium) {\n    @include type-scale(6);\n  }\n}\n","/* ==========================================================================\n   DECORATION\n   ========================================================================== */\n\n/// @group Decoration\n/// @require {function} color\n/// @require {function} rem\n/// @type map\n$elevations: (\n  1: (\n    0 rem(1) rem(3) rgba(color(gray, 700), .12),\n    0 rem(1) rem(2) rgba(color(gray, 700), .24)\n  ),\n  2: (\n    0 rem(3) rem(6) rgba(color(gray, 700), .16),\n    0 rem(3) rem(6) rgba(color(gray, 700), .23)\n  ),\n  3: (\n    0 rem(10) rem(20) rgba(color(gray, 700), .19),\n    0 rem(6) rem(6) rgba(color(gray, 700), .23)\n  ),\n  4: (\n    0 rem(14) rem(28) rgba(color(gray, 700), .25),\n    0 rem(10) rem(10) rgba(color(gray, 700), .22)\n  ),\n  5: (\n    0 rem(19) rem(38) rgba(color(gray, 700), .3),\n    0 rem(15) rem(12) rgba(color(gray, 700), .22)\n  ),\n);\n\n/// @group Decoration\n/// @require {variable} $elevations\n/// @param {number} $level\n@mixin elevation($level) {\n  box-shadow: map-get($elevations, $level);\n}\n\n/// @group Decoration\n/// @require {function} color\n/// @require {function} rem\n/// @type map\n$shadows: (\n  flat: 0 rem(12) 0 rem(-6),\n  card: 0 rem(3) 0 rem(-1),\n);\n\n/// @group Decoration\n/// @param {string} $type\n@mixin shadow($type, $color: false) {\n  box-shadow: map-get($shadows, $type) $color;\n}\n\n/// @group Decoration\n/// @require {mixin} shadow\n@mixin floatbox($shadow: flat, $widht: rem(3), $color: color(gray, 300)) {\n  @include shadow($shadow, $color);\n  border: $widht solid $color;\n}\n\n/// @group Decoration\n/// @param {string} $color [black]\n/// @param {number} $amount [.4]\n/// @output Creates a gradient overlay mask to the element\n@mixin gradient-mask($color: black, $amount: .4) {\n  position: relative;\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    width: 100%;\n    height: 100%;\n    background-image: linear-gradient(rgba($color, 0), rgba($color, $amount));\n  }\n\n  > * {\n    position: relative;\n    z-index: 1;\n  }\n}\n","/* ==========================================================================\n   TRANSITIONS\n   ========================================================================== */\n\n/// @group Transitions\n/// @type map\n$transitions: (\n  default: all 200ms ease,\n  modal: all 500ms ease,\n  lazy: opacity 2s cubic-bezier(0.22, 0.61, 0.36, 1),\n);\n\n\n\n/// @group Transitions\n/// @require {variable} $transitions\n/// @param {string} $name\n@mixin transition($name) {\n  transition: map-get($transitions, $name);\n}\n","/* ==========================================================================\n   HELPERS\n   ========================================================================== */\n\n/// @group Helpers\n/// @author Harry Roberts\n/// @param {bool} $self [false] - Whether or not to include current selector\n/// @link https://twitter.com/csswizardry/status/478938530342006784\n@mixin on-event($self: false) {\n  @if $self {\n    &,\n    &:hover,\n    &:active,\n    &:focus {\n      @content;\n    }\n  } @else {\n    &:hover,\n    &:active,\n    &:focus {\n      @content;\n    }\n  }\n}\n\n/// @group Helpers\n@mixin placeholder {\n  // Chrome/Opera/Safari\n  &::-webkit-input-placeholder {\n    @content;\n  }\n  // Firefox 19+\n  &::-moz-placeholder {\n    @content;\n  }\n  // IE 10+\n  &:-ms-input-placeholder {\n    @content;\n  }\n  // Firefox 18-\n  &:-moz-placeholder {\n    @content;\n  }\n}\n","/* ==========================================================================\n   CARD\n   ========================================================================== */\n\n.c-card {\n  @include elevation(3);\n  @include gradient-mask(black, 1);\n  @include transition(default);\n  display: block;\n  padding: size(22) size(3) size(3);\n  min-height: rem(315);\n  text-decoration: none;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  &, &:after {\n    border-radius: rem(4);\n  }\n\n  @include on-event {\n    @include elevation(4);\n    cursor: pointer;\n\n    .c-card__content {\n      transform: translateY(rem(-4));\n    }\n  }\n\n  @for $i from 1 through 9 {\n    &:nth-of-type(#{$i}) {\n      @include animation(intro, $i);\n    }\n  }\n}\n\n\n\n.c-card__tag {\n  @include type-scale(-2);\n  @include elevation(2);\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: translate(size(3), -50%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: size(1/2) size(1);\n  line-height: 1;\n  border-radius: rem(2);\n  background-color: black;\n  color: white;\n}\n\n\n\n.c-card__content {\n  @include transition(default);\n}\n\n\n\n.c-card__title,\n.c-card__description {\n  color: white;\n  text-shadow: 0 0 rem(2) rgba(black, .9)\n}\n\n\n\n.c-card__title {\n  @include type-scale(1);\n  @include text-wrap(2);\n  margin-bottom: size(1);\n}\n\n\n\n.c-card__description {\n  @include type-scale(-1, 0);\n  @include text-wrap(3);\n  margin: 0;\n  font-weight: 400;\n}\n","/* ==========================================================================\n   MODAL\n   ========================================================================== */\n\n.c-modal {\n  @include transition(modal);\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(black, .9);\n  z-index: 99999999;\n  overflow: hidden;\n  visibility: hidden;\n  opacity: 0;\n\n  &.is-visible {\n    @include transition(modal);\n    visibility: visible;\n    opacity: 1;\n\n    .c-modal__container {\n      @include animation(modal, 2);\n    }\n  }\n}\n\n\n\n.c-modal__container {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  width: calc(100% - #{size(6)});\n  max-width: rem(480);\n  height: auto;\n  border-radius: rem(4);\n  transform: translate(-50%, -50%);\n  background-color: white;\n  opacity: 0;\n}\n\n\n\n.c-modal__image {\n  @include gradient-mask(black, 1);\n  padding-bottom: 56.25%;\n  width: 100%;\n  margin: 0;\n  border-top-left-radius: rem(4);\n  border-top-right-radius: rem(4);\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n\n\n.c-modal__content {\n  display: grid;\n  grid-gap: size(1);\n  padding: size(3);\n}\n\n\n\n.c-modal__title {\n  @include type-scale(1);\n  margin: 0;\n}\n\n\n\n.c-modal__description {\n  @include type-scale(-1);\n  @include text-wrap(3);\n  max-height: rem(68);\n  margin: 0;\n}\n\n\n\n.c-modal__back {\n  @include type-scale(-1);\n  position: absolute;\n  top: size(-4);\n  color: white;\n  text-shadow: 0 0 rem(2) rgba(black, .9);\n  cursor: pointer;\n\n  @include on-event {\n    text-decoration: underline;\n  }\n}\n\n\n\n.c-modal__link {\n  @include type-scale(-1);\n  display: inline-block;\n  margin-top: size(1);\n  border-radius: rem(2);\n  color: black;\n}\n\n\n\n.c-modal__details {\n  @include type-scale(-1);\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  padding: size(2) size(3);\n  margin: 0;\n  text-shadow: 0 0 rem(2) rgba(black, .9);\n  list-style: none;\n  color: white;\n}\n\n\n\n.c-modal__date {\n  font-weight: 700;\n}\n"]}